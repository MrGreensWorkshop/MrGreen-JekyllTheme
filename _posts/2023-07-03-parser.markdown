---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_About_Parser
title: About parser

# post specific
# if not specified, .name will be used from _data/owner/[language].yml
author: Yeonuk
# multiple category is not supported
category: Module
# multiple tag entries are possible
tags: [module, software]
# thumbnail image for post
img: ":post_pic1.jpg"
# disable comments on this page
# comments_disable: true

# publish date
date: 2023-07-03 09:00:00 +0900
# seo
# if not specified, date will be used.
#meta_modify_date: 2021-08-10 11:32:53 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# please use the "image_viewer_on" below to enable image viewer for individual pages or posts (_posts/ or [language]/_posts folders).
# image viewer can be enabled or disabled for all posts using the "image_viewer_posts: true" setting in _data/conf/main.yml.
#image_viewer_on: true
# please use the "image_lazy_loader_on" below to enable image lazy loader for individual pages or posts (_posts/ or [language]/_posts folders).
# image lazy loader can be enabled or disabled for all posts using the "image_lazy_loader_posts: true" setting in _data/conf/main.yml.
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

### What is a Parser?

{:data-align="center"}

<!-- outline-end -->

While implementing a feature to display text based on post creation time (or more precisely, trigger text next to creation time for modified posts), I came across a function called Parser.
I came across a function called Parser and wanted to share what I learned.

#### Concept

A Parser is a software tool or module that analyzes a given input data and separates it into meaningful components.
A parser takes a series of strings or tokens as input, analyzes them according to grammar rules, and converts the results into a tree or abstract syntactic representation.

#### Main uses

Used in programs such as compilers, interpreters, database query processors, markup language processors, etc.
These programs analyze input according to specific grammar rules, tokenize it accordingly, or generate a syntax tree to interpret or execute its meaning.

#### Conclusion

Programs can effectively process input data and understand or execute the meaning of the data.

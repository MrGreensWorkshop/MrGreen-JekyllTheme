---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_About_RDB_and_NoSQL
title: About RDB and NoSQL

# post specific
# if not specified, .name will be used from _data/owner/[language].yml
author: Yeonuk
# multiple category is not supported
category: DB
# multiple tag entries are possible
tags: [db]
# thumbnail image for post
img: ":post_pic1.jpg"
# disable comments on this page
# comments_disable: true

# publish date
date: 2023-06-27 09:00:00 +0900
# seo
# if not specified, date will be used.
#meta_modify_date: 2021-08-10 11:32:53 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# please use the "image_viewer_on" below to enable image viewer for individual pages or posts (_posts/ or [language]/_posts folders).
# image viewer can be enabled or disabled for all posts using the "image_viewer_posts: true" setting in _data/conf/main.yml.
#image_viewer_on: true
# please use the "image_lazy_loader_on" below to enable image lazy loader for individual pages or posts (_posts/ or [language]/_posts folders).
# image lazy loader can be enabled or disabled for all posts using the "image_lazy_loader_posts: true" setting in _data/conf/main.yml.
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

### The difference between RDB and NoSQL

{:data-align="center"}

<!-- outline-end -->

#### can be divided into four main parts

1. data model:
   **RDB**: RDB structures data in the form of tables. Tables store data in a structure of rows and columns, and data is managed according to a set schema. Data can be linked by establishing relationships between tables.
   **NoSQL**: NoSQL supports a variety of data models. It primarily uses data models such as Key-Value, Document, Column, and Graph. NoSQL is schema flexible and does not enforce relationships between data.
2. scalability:
   **RDB**: RDBs primarily use vertical scaling, meaning they perform hardware upgrades to improve the performance of the server. Horizontal scaling requires more complex configuration and data partitioning.
   **NoSQL**: NoSQL is better suited for horizontal scaling. You can distribute and parallelize data across multiple servers to increase performance and scalability.
3. schema flexibility:
   **RDB**: RDBs require the data schema to be predefined. It strictly specifies the structure and type of data to ensure data consistency.
   **NoSQL**: NoSQL is schema flexible. It allows for flexible data model changes, such as adding new fields or changing existing ones.
4. Transactional and consistent:
   **RDB**: RDBs adhere to ACID principles to ensure data consistency and atomicity of transactions. Multiple operations can be bundled into a single transaction.
   **NoSQL**: NoSQL uses a more flexible approach to ensuring transactions and consistency. NoSQL databases have a choice of consistency models, and you can adjust the tradeoff between consistency and performance by adjusting the scope.

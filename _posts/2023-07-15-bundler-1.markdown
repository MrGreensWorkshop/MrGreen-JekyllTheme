---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_About_Bundler(1)
title: About bundler(1)
# title: About Bundler(1)

# post specific
# if not specified, .name will be used from _data/owner/[language].yml
author: Yeonuk
# multiple category is not supported
category: Network
# multiple tag entries are possible
tags: [network, javascript]
# thumbnail image for post
img: ":post_pic1.jpg"
# disable comments on this page
# comments_disable: true

# publish date
date: 2023-07-15 09:00:00 +0900
# seo
# if not specified, date will be used.
#meta_modify_date: 2021-08-10 11:32:53 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# please use the "image_viewer_on" below to enable image viewer for individual pages or posts (_posts/ or [language]/_posts folders).
# image viewer can be enabled or disabled for all posts using the "image_viewer_posts: true" setting in _data/conf/main.yml.
#image_viewer_on: true
# please use the "image_lazy_loader_on" below to enable image lazy loader for individual pages or posts (_posts/ or [language]/_posts folders).
# image lazy loader can be enabled or disabled for all posts using the "image_lazy_loader_posts: true" setting in _data/conf/main.yml.
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

### About Bundler (1)

{:data-align="center"}

<!-- outline-end -->

Recently, I've been learning about ES (ECMAScript).
While learning about browsers that don't support ES6 (IE, etc.), I was wondering who would be responsible for making my project ES-compliant, and I learned about Bundler, which I will share in this post.

#### What is a Bundler

A tool used in web application development that is responsible for taking multiple modules or files and bundling them together.
Bundling is the process of bundling the resources (JavaScript files, CSS files, images, etc.) required by a web application into a single file and delivering it to the client.

#### What are the roles of a bundler

1. Module support: Starting with ES6, the module system was added to the ES standard. Modules are written on a per-file basis, and can be exported and imported by other modules to use the parts they need. Bundlers handle these ES modules, identify their dependencies, and bundle them together.
2. Dependency resolution: ES modules can declare dependencies on other modules, and import and use the modules they need. The bundler understands these dependencies, loads the required modules, and bundles them together. This allows you to efficiently manage dependencies between modules in your web application.
3. Transfiling: The bundler can convert JavaScript code written using ES6 or later syntax to older versions of JavaScript. This is necessary to maintain compatibility with older browsers. It is often used in conjunction with Babel to convert ES6+ code to ES5 code.
4. Code optimization: The bundler can perform various optimizations to minimize the size of the code and improve performance. This includes removing redundant code, compression, obfuscation, and more. The bundled output is delivered to the client in an optimized form, enabling fast loading and efficient execution.
5. Separate environments: The bundler supports using different settings for development and production environments. The development environment provides a development server and features like Hot Module Replacement (HMR) to facilitate the development process. In production, you can create optimized bundles and take advantage of caching and other features to improve performance.

A popular JS bundler is webpack. It is mostly used in conjunction with babel, which I will write about in the next post.
